import{r as t,o as e,c,a as n,d as p,F as o,b as s,e as l}from"./app.2b1d2d38.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const i={},r=n("h3",{id:"\u80CC\u666F",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u80CC\u666F","aria-hidden":"true"},"#"),s(" \u80CC\u666F")],-1),k=s("\u5728"),d={href:"https://xdushepherd91.github.io/vue-blog/toy-mybatis/1",target:"_blank",rel:"noopener noreferrer"},m=s("\u4E0A\u7BC7\u6587\u7AE0"),b=s(" \u4E2D,\u7B14\u8005\u5F00\u53D1\u4E86\u4E00\u4E2A\u73A9\u5177\u7248\u672C\u7684\u4EFFmybatis\u7684\u6570\u636E\u5E93\u64CD\u4F5C\u6846\u67B6\uFF0C\u5F88\u660E\u663E\uFF0C\u8FD9\u4E2A\u73A9\u5177\u7248\u672C\u7684mybatis\u6709\u5F88\u591A\u4E0D\u8DB3\uFF0C\u8FD9\u91CC\u7F57\u5217\u4E00\u4E9B\u4E9F\u5F85\u89E3\u51B3\u7684\u95EE\u9898\uFF1A"),y=l(`<ol><li>sql\u4E0D\u652F\u6301\u53C2\u6570\u4F20\u9012</li><li>\u8FD4\u56DE\u5BF9\u8C61\u6784\u5EFA\u8FC7\u4E8E\u539F\u59CB\uFF0C\u65E0\u6CD5\u9488\u5BF9\u4E0D\u540C\u7C7B\u578B\u5C5E\u6027\u8FDB\u884C\u8D4B\u503C\u64CD\u4F5C</li><li>\u7B49\u7B49...</li></ol><h3 id="\u76EE\u6807" tabindex="-1"><a class="header-anchor" href="#\u76EE\u6807" aria-hidden="true">#</a> \u76EE\u6807</h3><p>\u5728\u672C\u7CFB\u5217\u7684\u7B2C\u4E8C\u7BC7\u6587\u7AE0\u91CC\uFF0C\u7B14\u8005\u9996\u5148\u5904\u7406\u7B2C\u4E8C\u4E2A\u95EE\u9898\uFF0C\u652F\u6301\u4E0D\u540C\u7C7B\u578B\u5C5E\u6027\u7684\u8D4B\u503C\u64CD\u4F5C\u3002</p><h3 id="toy-mybatis-v3" tabindex="-1"><a class="header-anchor" href="#toy-mybatis-v3" aria-hidden="true">#</a> toy-mybatis-v3</h3><p>\u9996\u5148\u6765\u89E3\u51B3\u4E0D\u540C\u7C7B\u578B\u5C5E\u6027\u8D4B\u503C\u95EE\u9898\uFF0C\u8D4B\u503C\u7684\u8FC7\u7A0B\u5982\u4E0B:</p><ol><li>\u901A\u8FC7\u53CD\u5C04\u83B7\u53D6\u5C5E\u6027\u540D\u79F0\u3002fieldName</li><li>\u901A\u8FC7JDBC\u4E2DResultSet\u7C7B\u578B\u7684getType\u65B9\u6CD5\u83B7\u53D6\u6570\u636E\u5E93\u8BB0\u5F55\u4E2D\u7684fieldName\u5BF9\u5E94\u7684\u503C</li><li>\u901A\u8FC7\u53CD\u5C04\u5BF9\u5C5E\u6027\u8FDB\u884Cset\u64CD\u4F5C\u3002</li></ol><p>\u4EE5\u4E0A\uFF0C\u53EF\u4EE5\u770B\u5230\uFF0CgetType\u9700\u8981\u6839\u636E\u5C5E\u6027\u7684\u7C7B\u578B\u6765\u786E\u5B9A\uFF0C\u5177\u4F53\u6765\u8BF4\uFF0C\u5BF9\u4E8E\u4E00\u4E2AString\u7C7B\u578B\u7684\u5C5E\u6027\uFF0C\u9700\u8981getString\u65B9\u6CD5\u6765\u83B7\u53D6\u503C\uFF0C\u800CLong\u7C7B\u578B\u7684\u5C5E\u6027\uFF0C\u9700\u8981getLong\u6765\u83B7\u53D6\u503C\uFF0C\u4EE5\u6B64\u7C7B\u63A8\u3002</p><p>\u6211\u4EEC\u53EF\u4EE5\u770B\u5230\uFF0C\u5B9E\u9645\u4E0A\uFF0C\u6211\u4EEC\u9700\u8981\u7EF4\u62A4\u4E00\u4E2A\u7C7B\u578B-&gt;getType\u7684\u6620\u5C04\u5173\u7CFB\uFF0C\u6700\u7B80\u5355\u7684\u5C31\u662F\u7EF4\u62A4\u4E00\u4E2Amap\u5373\u53EF\u3002\u8FD9\u91CC\u6211\u4EEC\u53EF\u53C2\u8003mybatis\u7684TypeHandler\u63A5\u53E3\uFF0C\u6B63\u597D\u53EF\u4EE5\u7528\u6765\u89E3\u51B3\u672C\u6B21\u7684\u95EE\u9898\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">TypeHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token class-name">T</span> <span class="token function">getResult</span><span class="token punctuation">(</span><span class="token class-name">ResultSet</span> resultSet<span class="token punctuation">,</span> <span class="token class-name">String</span> columnName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StringHandler</span> <span class="token keyword">implements</span> <span class="token class-name">TypeHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getResult</span><span class="token punctuation">(</span><span class="token class-name">ResultSet</span> resultSet<span class="token punctuation">,</span> <span class="token class-name">String</span> columnName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> resultSet<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>columnName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setValue</span><span class="token punctuation">(</span><span class="token class-name">PreparedStatement</span> ps<span class="token punctuation">,</span> <span class="token class-name">String</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TypeHandlerRegistry</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Class</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">,</span><span class="token class-name">TypeHandler</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> handlers<span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        handlers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        handlers<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">StringHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">TypeHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">getHandler</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> handlers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MapperMethodInvocationHandler</span> <span class="token keyword">implements</span> <span class="token class-name">InvocationHandler</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Object</span> proxy<span class="token punctuation">,</span> <span class="token class-name">Method</span> method<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>
        <span class="token class-name">Select</span> select <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">Select</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>select <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">String</span> sqlCommand <span class="token operator">=</span> select<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Connection</span> dbConnection <span class="token operator">=</span> <span class="token class-name">SqlSession</span><span class="token punctuation">.</span><span class="token function">getDBConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">PreparedStatement</span> preparedStatement <span class="token operator">=</span> dbConnection<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span>sqlCommand<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ResultSet</span> resultSet <span class="token operator">=</span> preparedStatement<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>resultSet<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> returnType <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">getReturnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Object</span> result <span class="token operator">=</span> returnType<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span> declaredFields <span class="token operator">=</span> returnType<span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Field</span> declaredField <span class="token operator">:</span> declaredFields<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Method</span> setMethod <span class="token operator">=</span> returnType<span class="token punctuation">.</span><span class="token function">getDeclaredMethod</span><span class="token punctuation">(</span><span class="token string">&quot;set&quot;</span> <span class="token operator">+</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">capitalize</span><span class="token punctuation">(</span>declaredField<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> declaredField<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                setMethod<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> <span class="token class-name">TypeHandlerRegistry</span><span class="token punctuation">.</span><span class="token function">getHandler</span><span class="token punctuation">(</span>declaredField<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getResult</span><span class="token punctuation">(</span>resultSet<span class="token punctuation">,</span> declaredField<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> result<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br></div></div><h3 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h3>`,10),g=s("\u901A\u8FC7\u4E0A\u8FF0\u7684\u5F00\u53D1\u5DE5\u4F5C("),h={href:"https://github.com/xdushepherd91/toy-mapper/tree/toy-mybatis-v3",target:"_blank",rel:"noopener noreferrer"},f=s("\u4EE3\u7801\u5730\u5740"),w=s(" )\uFF0Ctoy mybatis\u5DF2\u7ECF\u53EF\u4EE5\u5904\u7406\u4E0D\u540C\u7C7B\u578B\u6570\u636E\u7684\u5904\u7406\u4E86\uFF0C\u5BF9\u4E8E\u66F4\u591A\u7C7B\u578B\u7684\u5904\u7406\uFF0C\u53EA\u9700\u8981\u5411TypeHandlerRegistry\u4E2D\u6CE8\u518C\u66F4\u591A\u7684TypeHandler\u5B9E\u73B0\u5373\u53EF\u3002"),_=n("p",null,"\u901A\u8FC7\u672C\u6587\uFF0C\u76F8\u4FE1\u8BFB\u8005\u53EF\u4EE5\u5BF9mybatis\u7684TypeHandler\u6709\u4E00\u4E2A\u6DF1\u5165\u7684\u4E86\u89E3.",-1);function S(v,T){const a=t("ExternalLinkIcon");return e(),c(o,null,[r,n("p",null,[k,n("a",d,[m,p(a)]),b]),y,n("p",null,[g,n("a",h,[f,p(a)]),w]),_],64)}var F=u(i,[["render",S]]);export{F as default};
